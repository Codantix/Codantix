[project]
name = "codantix"
version = "0.1.0"
authors = [
    {name = "Adiel", email = "your.email@example.com"}
]
description = "document and index repositories"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "click>=8.1.0",
    "langchain>=0.1.0",
    "gitpython>=3.1.0",
    "chromadb>=0.4.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",
    "esprima>=4.0.1",
    "langchain-google-genai>=2.1.4",
    "langchain-community>=0.3.23",
    "langchain-openai>=0.3.16",
    "langchain-chroma>=0.2.3",
    "sphinx-rtd-theme>=3.0.2",
    "langchain-huggingface>=0.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "build>=1.2.2.post1",
    "isort>=6.0.1",
    "mypy>=1.15.0",
    "myst-parser>=4.0.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.8",
    "sphinx>=8.2.3",
    "sphinx-pyproject>=0.3.0",
]

[project.scripts]
codantix = "codantix.cli:cli"

[tool.coverage.run]
branch = true
source = ["codantix/"]
omit = [
    "codantix/cli.py",
    "tests/*",
    "setup.py",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    "__pycache__/*", 
    "codantix/splink_example.py"
]

[tool.coverage.paths]
source = ["codantix/"]

[tool.coverage.report]
show_missing = true
fail_under = 0
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
    "ignore::UserWarning",
    "ignore::ResourceWarning"
]

[tool.sphinx-pyproject]
project = 'codantix'
copyright = '2025, Adiel'
author = 'Adiel'
language = "en"
package_root = "codantix"
templates_path = ['_templates']
exclude_patterns = [
    "_build",
    ".DS_Store"
]
extensions = [
    "sphinx.ext.duration",
    "sphinx.ext.doctest",
    "sphinx.ext.autosummary",
    "sphinx.ext.intersphinx",
    'myst_parser',
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.napoleon',
    'sphinx_rtd_theme'
]
html_theme = 'sphinx_rtd_theme'
html_static_path = ['_static']
autosectionlabel_prefix_document = true
